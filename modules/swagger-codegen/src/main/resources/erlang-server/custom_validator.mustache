-module({{packageName}}_custom_validator).
-export([validate_format/3]).

-type rule()     :: {{packageName}}_validation::rule().
-type name()     :: {{packageName}}:param_name().
-type value()    :: {{packageName}}:value().
-type msg_type() :: request | response.
-type opts()     :: {{packageName}}_validation::validation_opts().

-type validate_return() :: ok | {ok, term()} | pass | {error, term()}.

-callback validate_rule(rule(), name(), value(), msg_type()) ->
    validate_return().

-spec call(rule(), name(), value(), msg_type(), opts()) ->
    validate_return().
call(Rule, Name, Value, MsgType, Opts) ->
    case maps:get(custom_validator, Opts, undefined) of
        undefined ->
            pass;
        Module ->
            Module:validate_rule(Rule, Name, Value, MsgType)
    end.
